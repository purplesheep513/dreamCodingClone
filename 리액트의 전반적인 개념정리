*****
리액트 = 컴포넌트들
컴포넌트를 만드는 방법이 2개가 있다
1. 클래스
2. 함수

클래스 : 리액트에서 제공하는 Component라는 클래스를 상속받아서 사용
함수 : 간단히 함수로 만들어서 사용

클래스 : 내 컴포넌트가 state가 있고 그 상태에 따라서 컴포넌트가 주기적으로 업데이트 되어야할때 쓴다
함수 : 내 컴포넌트의 state가 없고 항상 정적으로 데이터가 표기가 될때 사용한다.

Class
위에서 설명한 것과 같이 클래스는 state가 있다고 했다.
그리하여 Component를 상속받아 클래스를 만들면 state라는 오브젝트도 함께 상속받게 된다. 이 state가 변경되면 render함수가 호출되면서 업데이트 된 내용이 사용자에게 보여진다.
또한 lifecycle methods라는 methods가 컴포넌트의 state가 변화할때 (개발자가 미리 각각의 상태에 따라 구현해놓은)함수를 알아서 불러온다.
컴포넌트가 mount되었을 때 unmount되었을 때 update가 되었을 상황에 세부적으로 함수가 나누어져 있어서 중복되는 코드를 작성해야 하는 경우가 있다.

Function
state나 lifecycle methods도 없다. 함수는 한가지 업무를 수행하는 단위다.
그러나 리액트 16.8버전 이후로는 함수형에서도 class처럼 이용할 수 있게되었는데 이를 react hook이라고 한다.
그리하여 react hook을 사용하면 state와 lifecycle methods를 사용할 수 있게됨.

어차피 같은 기능을 이용하는 것인데 굳이 class를 사용하지 않고 react hook이 도입된 이유는 뭘까?
->  이유는...
1. 클래스를 사용하는 것이 어렵기 때문이다.
2. 클래스를 이용하면 멤버변수에 접근할 때 this를 붙여아한다는 것이 불편함
3. class에서 함수를 이용할 때 binding 이슈가 있다.
4. class에서 중복되는 함수를 제거할 수 있다.

그러나! class컴포넌트를 가지고있는 기존의 프로젝트가 많기 때문에 class도 공부해두어야한다.


폴더를 살펴보면 크게 public과 src로 나뉠 수 있는데
public은 static한 소스가 들어가고 src는 동적인 소스가 들어간다.